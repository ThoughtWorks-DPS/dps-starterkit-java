name: dps-starterkit-java
owner: Example
environment: twdps-dev
namespace: example-local
cluster: sandbox
instance: awsinstance
region: awsregion
version: 0.1
replicaCount: 1
#TUNE as required for application
podDisruptionBudget: 20%

labels:
  app: dps-starterkit-java
  deployment: green

blueVersion: false

styraLabels:
  styra.io/opa-injection: disabled
  styra.io/system: dps-starterkit-java

initContainerName: twdps/dps-starterkit-java-db-init:latest

image:
  repository: twdps/dps-starterkit-java
  imagePullPolicy: IfNotPresent
  tag: "latest"

imagePullSecret: docker-hub-pull-secret

resources:
  requests:
    cpu: 150m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 1024Mi

service:
  type: ClusterIP
  port: 8080

#The .Values.environment is computed by the deploy plugin - it returns//uses values like dev, qa, pre, prod etc
ingress:
  pathPrefix: "/v1/example"
  hosts:
    - dps-starterkit-java.{{ .Values.namespace }}.{{ .Values.cluster }}.twdps.io
    - dps-starterkit-java.{{ .Values.namespace }}.svc.cluster.local
  gateways:
    - istio-system/api-gateway-{{ .Values.environment }}
    - mesh

rds:
  migration: false
  initContainer: false
  dbName: example
  port: 5432
  url: jdbc:postgresql://{{ .Values.instance }}.{{ .Values.region }}.rds.amazonaws.com:{{ .Values.rds.port }}/{{ .Values.rds.dbName }}

ports:
  - name: http
    containerPort: 8080
    protocol: TCP
  - name: liveness
    containerPort: 8081
    protocol: TCP
  - name: debug
    containerPort: 5005
    protocol: TCP

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8081
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8081
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  psql:
    name: psql-secret
    psql_username_key: psql-username
    psql_password_key: psql-password
    psql_root_username_key: psql_root_username
    psql_root_password_key: psql_root_password
    psql_endpoint_key: psql_endpoint

nsAnyVars:
  - name: JAVA_OPTS
    value: -Xmx512m
  - name: ZIPKIN_ENABLED
    value: "true"
  - name: OPENTRACING_ZIPKIN_HTTPSENDER_BASEURL
    value: "http://zipkin.istio-system.svc.cluster.local:9411"

nsSpecificVars:
  di-dev:
    - name: POSTGRES_DBNAME
      value: example
